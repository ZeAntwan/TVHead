/// @description edgefmv_load(fname);
/// @param fname

/*
Loads an .FMV file created with MakeFMV into the system storage for playback
with the edgefmv_play script at a later time. Running this script WILL create
a pause in the game during the preload operation, however using edgefmv_load
gives you the opportunity to disguise the process as much as possible rather 
than create a pause directly before playing the video.

FMVs can be loaded into the system in one of two ways: caching from a single,
self-contained .fmv file generated by MakeFMV (preload), or an extracted 
folder containing .fmv frames and .ogg audio (precache). It is generally
recommended to use preloading during development for quick testing and project
saving, and then switching to the precache model for deployment and distribution.

argument0 = the filename of the desired FMV file, including extension (string)

Note that when precaching, the input filename should be the name of the folder
containing frames plus the extension of the frames themselves.

Example usage: edgefmv_load("myvideo.fmv");
*/

/*
INITIALIZE
*/

//Separate path from input file
var path = argument0;

while string_count("\\",path) > 1 {
   path = string_delete(path,string_pos("\\",path),1);
}

path = string_copy(argument0, 0, string_pos("\\",path) + string_count("\\",argument0) - 1);

//Separate filename without extension from input file
var fname = string_copy(argument0, string_length(path) + 1, string_pos(".",argument0) - (string_length(path) + 1));

//Separate extension from input file
var ext = string_copy(argument0, string_pos(".",argument0) + 1, string_length(argument0) - string_pos(".",argument0) + 1);

/*
PRECACHE
*/
//Check for precached files
if file_exists(path + fname + "\\" + fname + "_0." + ext) {
   //Set the loaded video
   global.fmv_fname = fname;
   global.fmv_ext = ext;
   global.fmv_path = path + fname + "\\";
   
   //Initialize core FMV variables
   global.fmv_init = true;
   global.fmv_complete = false;
   global.fmv_loaded = true;
   global.fmv_pause = false;
   global.fmv_skip = false;

   //Initialize core frame variables
   global.fmv_frame = -1;
   global.fmv_frame_count = 0;
   global.fmv_frame_index = 0;
   global.fmv_frame_rate = 0;
   global.fmv_frame_time = 0;
   global.fmv_frame_tracker = 0;
   global.fmv_frame_width = 0;
   global.fmv_frame_height = 0;

   //Initialize core audio variables
   global.fmv_audio = -1;
   global.fmv_audio_exists = false;
   global.fmv_audio_volume = 1;
   
   //If precache is found, return 1--files are loaded
   return 1;
}

/*
PRELOAD
*/
if file_exists(argument0) {
   //Check for existing preload cache
   if !directory_exists(working_directory + "\\cache\\fmv\\" + fname + "\\") {
      //Set the loaded video
      global.fmv_fname = fname;
      global.fmv_ext = ext;
      global.fmv_path = working_directory + "\\cache\\fmv\\" + fname + "\\";
   
      //Initialize core FMV variables
      global.fmv_init = true;
      global.fmv_complete = false;
      global.fmv_loaded = true;
      global.fmv_pause = false;
      global.fmv_skip = false;

      //Initialize core frame variables
      global.fmv_frame = -1;
      global.fmv_frame_count = 0;
      global.fmv_frame_index = 0;
      global.fmv_frame_rate = 0;
      global.fmv_frame_time = 0;
      global.fmv_frame_tracker = 0;
      global.fmv_frame_width = 0;
      global.fmv_frame_height = 0;      

      //Initialize core audio variables
      global.fmv_audio = -1;
      global.fmv_audio_exists = false; 
      global.fmv_audio_volume = 1; 
      
      //Cache the file into system storage and return the number of files cached--files are loaded
      return zip_unzip(argument0, working_directory + "\\cache\\fmv\\" + fname + "\\");
   } else {
      //Set the loaded video
      global.fmv_fname = fname;
      global.fmv_ext = ext;
      global.fmv_path = working_directory + "\\cache\\fmv\\" + fname + "\\";
   
      //Initialize core FMV variables
      global.fmv_init = true;
      global.fmv_complete = false;
      global.fmv_loaded = true;
      global.fmv_pause = false;
      global.fmv_skip = false;

      //Initialize core frame variables
      global.fmv_frame = -1;
      global.fmv_frame_count = 0;
      global.fmv_frame_index = 0;
      global.fmv_frame_rate = 0;
      global.fmv_frame_time = 0;
      global.fmv_frame_tracker = 0;  
      global.fmv_frame_width = 0;
      global.fmv_frame_height = 0;      

      //Initialize core audio variables
      global.fmv_audio = -1;
      global.fmv_audio_exists = false;     
      global.fmv_audio_volume = 1;
   
      //If existing preload cache is found, return 1--files are loaded
      return 1;
   }  
} 

/*
NO FILE
*/
if !file_exists(argument0) {
   if !directory_exists(path + fname + "\\") {
      //Set the loaded video as null
      global.fmv_fname = "";
      global.fmv_ext = "";
      global.fmv_path = "\\";
   
      //Initialize core FMV variables as null
      global.fmv_init = true;
      global.fmv_complete = false;
      global.fmv_loaded = false;
      global.fmv_pause = false;
      global.fmv_skip = false;

      //Initialize core frame variables as null
      global.fmv_frame = -1;
      global.fmv_frame_count = 0;
      global.fmv_frame_index = 0;
      global.fmv_frame_rate = 0;
      global.fmv_frame_time = 0;
      global.fmv_frame_tracker = 0;
      global.fmv_frame_width = 0;
      global.fmv_frame_height = 0;      

      //Initialize core audio variables as null
      global.fmv_audio = -1;
      global.fmv_audio_exists = false;   
      global.fmv_audio_volume = 1;
      
      //If file is not found, return 0--files are not loaded
      return 0;
   }
}
